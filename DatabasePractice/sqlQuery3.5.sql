create database sqlQuery3_5_Sales;
/*Case 1
Create a database called "sales" with three tables: "customers", "orders", and "products".
The "customers" table should have the following columns: "customer_id", "first_name", "last_name", "email", and "phone".
The "orders" table should have the following columns: "order_id", "order_date", "customer_id", and "product_id".
The "products" table should have the following columns: "product_id", "product_name", "unit_price", and "description".

1.	Insert at least five customers, five products, and ten orders into the respective tables. Make sure that at least two customers have multiple orders, and at least two products are included in multiple orders.
2.	Write a query that retrieves the customer's first name, last name, email, and the number of orders they have placed. The results should be ordered by the number of orders in descending order.
3.	Write a query that retrieves the product name, the total number of orders for each product, and the total revenue generated by each product. The results should be ordered by the total revenue in descending order.
4.	Write a query that retrieves the first name, last name, email, and product name for each order. The results should only include orders where the customer has placed multiple orders.
5.	Write a query that retrieves the first name, last name, and email for each customer who has placed at least one order for a product with a unit price greater than $50.
6.	Write a query that retrieves the product name and the number of times it has been ordered, but only includes products that have been ordered more than once.
*/
use sqlQuery3_5_Sales;

-- customers table
CREATE TABLE IF NOT EXISTS customers (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone VARCHAR(20)
);

INSERT INTO customers (first_name, last_name, email, phone)
VALUES

    ('John', 'Doe', 'john.doe@example.com', '123-456-7890'),
    ('Jane', 'Smith', 'jane.smith@example.com', '987-654-3210'),
    ('Michael', 'Johnson', 'michael.johnson@example.com', '555-123-4567'),
    ('Emily', 'Davis', 'emily.davis@example.com', '111-222-3333'),
    ('Chris', 'Wilson', 'chris.wilson@example.com', '999-888-7777');
-- products table
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(100),
    unit_price DECIMAL(10, 2),
    description TEXT
);
INSERT INTO products (product_name, unit_price, description)
VALUES
    ('Laptop', 999.99, '15" laptop with SSD drive'),
    ('Smartphone', 599.99, 'Latest smartphone model'),
    ('Headphones', 149.99, 'Wireless noise-canceling headphones'),
    ('Tablet', 299.99, '10" tablet with touchscreen'),
    ('Smartwatch', 199.99, 'Fitness tracker and smartwatch');

-- orders table
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    order_date DATE,
    customer_id INT,
    product_id INT,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);
INSERT INTO orders (order_date, customer_id, product_id)
VALUES
 
    ('2024-03-01', 1, 1),
    ('2024-03-02', 2, 2),
    ('2024-03-03', 3, 3),
    ('2024-03-04', 4, 4),
    ('2024-03-05', 5, 5),
    ('2024-03-06', 1, 2),
    ('2024-03-07', 2, 3),
    ('2024-03-08', 3, 4),
    ('2024-03-09', 4, 5),
    ('2024-03-10', 1, 3),
    ('2023-03-01', 3, 4),
    ('2023-12-01', 2, 1),
('2023-11-01', 6, 1);
-- 1: Retrieve customer's first name, last name, email, and number of orders placed
select c.*,count(*) as total_order 
from customers c 
left join orders o on c.customer_id=o.customer_id 
group by o.customer_id;

-- Query 2: Retrieve product name, total number of orders, and total revenue generated by each product
select p.product_name,count(o.product_id) as no_of_products,sum(p.unit_price) as total_revenue
from products p 
inner join orders o on p.product_id=o.product_id
group by o.product_id;

-- Query 3: Retrieve first name, last name, email, and product name for each order where the customer has placed multiple orders
select c.first_name,c.last_name,c.email,p.product_name
from customers c
inner join orders o on c.customer_id=o.customer_id
inner join products p on p.product_id=o.product_id
group by c.customer_id,p.product_name
having count(o.product_id)>0;

-- Query 4: Retrieve first name, last name, and email for each customer who has placed at least one order for a product 
-- with a unit price greater than $50

SELECT DISTINCT c.first_name, c.last_name, c.email
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN products p ON o.product_id = p.product_id
WHERE p.unit_price > 50;

-- Query 5: Retrieve product name and the number of times it has been ordered, 
-- but only includes products that have been ordered more than once
SELECT p.product_name, COUNT(o.order_id) AS num_orders
FROM products p
JOIN orders o ON p.product_id = o.product_id
GROUP BY p.product_id
HAVING COUNT(o.order_id) > 1;


