use sqlquery4_2;
-- Table: employees
CREATE TABLE employees5_3 (
    employee_id SERIAL PRIMARY KEY,
    employee_name VARCHAR(100) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL
);
INSERT INTO employees5_3 (employee_name, salary) VALUES
('John Doe', 50000.00),
('Jane Smith', 60000.00),
('Michael Johnson', 75000.00),
('Emily Brown', 55000.00);

CREATE TABLE orders5_3 (
    order_id SERIAL PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL,
    revenue DECIMAL(10, 2) NOT NULL,
    country varchar(256),
    employee_id bigint,
    foreign key (employee_id) references employees5_3(employee_id)
);

INSERT INTO orders5_3 (customer_name, revenue,country, employee_id) VALUES

('Michael Wilson', 22000.00,'USA',1),
('Jane Smith', 32000.75, 'Canada',4),
('John Doe', 30000.75, 'Canada',2),
('John Doe', 12000.75, 'USA',3),
('Jane Smith', 12000.75, 'Canada',4),
('Alice Johnson', 8000.30, 'USA',1),
('Bob Brown', 10500.00, 'USA',4),
('Emily Davis', 7000.20, 'Canada',2),
('Michael Wilson', 20000.00,'USA',2),
('Emma Lee', 13000.80, 'USA',2),
('William Taylor', 9000.60,'Canada',1),
('Olivia Martin', 11000.40,'USA',4),
('James Anderson', 7500.90, 'USA',3);


/*1.	Write a SQL query to retrieve the names and salaries of all employees who have a salary greater than the average salary of 
all employees.*/
select employee_name 
from employees5_3 
where salary>
	(select avg(salary) from employees5_3);

/*2.	Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, sorted by revenue 
in descending order.*/
SELECT customer_name, SUM(revenue) AS total_revenue
FROM orders5_3
GROUP BY customer_name
ORDER BY total_revenue DESC;

/* 3.	Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the total revenue is greater than $10,000.*/
SELECT customer_name, SUM(revenue) AS total_revenue
FROM orders5_3
GROUP BY customer_name
having total_revenue > 10000
ORDER BY total_revenue DESC;

/* 4.	Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the total revenue is greater than the average revenue generated by all customers.*/
SELECT customer_name, SUM(revenue) AS total_revenue
FROM orders5_3
GROUP BY customer_name
HAVING SUM(revenue) > (
    SELECT AVG(avg_revenue)
    FROM (
        SELECT customer_name, SUM(revenue) AS avg_revenue
        FROM orders5_3
        GROUP BY customer_name
    ) AS avg_revenue_subquery
)
ORDER BY total_revenue DESC;


/* 5. Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the total revenue is greater than the average revenue generated by all customers, 
and the customer is from the "USA" or "Canada".*/
 SELECT customer_name, SUM(revenue) AS total_revenue
FROM orders5_3
WHERE country IN ('canada','USA')
GROUP BY customer_name
HAVING SUM(revenue) > (
    SELECT AVG(avg_revenue)
    FROM (
        SELECT customer_name, SUM(revenue) AS avg_revenue
        FROM orders5_3
        GROUP BY customer_name
    ) AS avg_revenue_subquery
)
ORDER BY total_revenue DESC;
 
/*6.	Write a SQL query to retrieve the names of all employees who have made sales greater than $50,000 in the "orders" table.*/
 select employee_name 
 from employees5_3 e 
 join orders5_3 o on e.employee_id = o.employee_id 
 where revenue>50000;
 
/*7.	Write a SQL query to retrieve the names of all employees who have made sales greater than the average sales of all employees 
in the "orders" table, sorted by sales in descending order.*/
  select employee_name 
 from employees5_3 e 
 join orders5_3 o on e.employee_id = o.employee_id 
where o.revenue>(select avg(revenue) from orders5_3)
GROUP BY e.employee_name
order by sum(o.revenue) desc;

/*8.	Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the customer is from the "USA" and the revenue is greater than $5,000.*/
select customer_name, sum(revenue) as total_revenue
from orders5_3
where country='USA' 
group by customer_name
having total_revenue>5000
order by total_revenue desc;

/* 9. Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the customer is from the "USA" and the revenue is greater than the average 
revenue generated by all customers from the "USA".*/
select customer_name, sum(revenue) as total_revenue
from orders5_3
where country='USA' 
group by customer_name
having total_revenue>
	(select avg(revenue) 
    from orders5_3 
    WHERE country = 'USA')
order by total_revenue desc;

/*10.	Write a SQL query to retrieve the names and total revenue generated by all customers in the "orders" table, 
sorted by revenue in descending order, where the customer is from the "USA" and the revenue is greater than the average revenue 
generated by all customers, and the customer has made at least 2 orders.*/
select customer_name, sum(revenue) as total_revenue
from orders5_3
where customer_name in (
	select customer_name 
    from orders5_3
    group by customer_name 
    having count(customer_name)>1 ) 
and country='USA'
group by customer_name
having total_revenue>avg(revenue)
order by total_revenue desc;


